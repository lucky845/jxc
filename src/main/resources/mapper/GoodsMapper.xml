<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.atguigu.jxc.dao.GoodsDao">

    <resultMap id="BaseResultMap" type="com.atguigu.jxc.entity.Goods" autoMapping="true">
        <result column="goods_id" property="goodsId"/>
        <result column="goods_code" property="goodsCode"/>
        <result column="goods_name" property="goodsName"/>
        <result column="inventory_quantity" property="inventoryQuantity"/>
        <result column="min_num" property="minNum"/>
        <result column="goods_model" property="goodsModel"/>
        <result column="goods_producer" property="goodsProducer"/>
        <result column="purchasing_price" property="purchasingPrice"/>
        <result column="last_purchasing_price" property="lastPurchasingPrice"/>
        <result column="remarks" property="remarks"/>
        <result column="selling_price" property="sellingPrice"/>
        <result column="state" property="state"/>
        <result column="goods_unit" property="goodsUnit"/>
        <result column="goods_type_id" property="goodsTypeId"/>
        <result column="goods_type_name" property="goodsTypeName"/>
        <result column="goods_num" property="saleTotal"/>
    </resultMap>

    <insert id="addGoods">
        insert into t_goods(goods_code,
                            goods_name,
                            inventory_quantity,
                            min_num,
                            goods_model,
                            goods_producer,
                            purchasing_price,
                            last_purchasing_price,
                            remarks,
                            selling_price,
                            state,
                            goods_unit,
                            goods_type_id)
        values (#{goodsCode},
                #{goodsName},
                #{inventoryQuantity},
                #{minNum},
                #{goodsModel},
                #{goodsProducer},
                #{purchasingPrice},
                #{lastPurchasingPrice},
                #{remarks},
                #{sellingPrice},
                #{state},
                #{goodsUnit},
                #{goodsTypeId})
    </insert>

    <update id="updateGoods">
        update t_goods
        <set>
            <if test="goodsCode != null and goodsCode != ''">
                goods_code = #{goodsCode}
            </if>
            <if test="goodsName != null and goodsName != ''">
                ,goods_name = #{goodsName}
            </if>
            <if test="lastPurchasingPrice != null and lastPurchasingPrice != ''">
                ,last_purchasing_price = #{lastPurchasingPrice}
            </if>
            <if test="minNum != null and minNum != ''">
                ,min_num = #{minNum}
            </if>
            <if test="goodsModel != null and goodsModel != ''">
                ,goods_model = #{goodsModel}
            </if>
            <if test="goodsProducer != null and goodsProducer != ''">
                ,goods_producer = #{goodsProducer}
            </if>
            <if test="purchasingPrice != null and purchasingPrice != ''">
                ,purchasing_price = #{purchasingPrice}
            </if>
            <if test="remarks != null and remarks != ''">
                ,remarks = #{remarks}
            </if>
            <if test="sellingPrice != null and sellingPrice != ''">
                ,selling_price = #{sellingPrice}
            </if>
            <if test="goodsUnit != null and goodsUnit != ''">
                ,goods_unit = #{goodsUnit}
            </if>
        </set>
        where goods_id = #{goodsId}
    </update>

    <delete id="delete">
        delete
        from t_goods
        where goods_id = #{goodsId}
    </delete>

    <select id="getMaxCode" resultType="java.lang.String">
        SELECT MAX(goods_code)
        FROM t_goods
    </select>

    <select id="getGoodsCount" resultType="java.lang.Integer">
        select
        count(*)
        from
        t_goods
        <where>
            <if test="codeOrName != null and codeOrName != ''">
                or goods_code like CONCAT('%', #{codeOrName} ,'%')
            </if>
            <if test="codeOrName != null and codeOrName != ''">
                or goods_name like CONCAT('%', #{codeOrName} ,'%')
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                or goods_type_id = #{goodsTypeId}
            </if>
        </where>
    </select>

    <select id="getGoodsList" resultMap="BaseResultMap">
        select g.goods_id,
        g.goods_code,
        g.goods_name,
        g.inventory_quantity,
        g.last_purchasing_price,
        g.min_num,
        g.goods_model,
        g.goods_producer,
        g.purchasing_price,
        g.remarks,
        g.selling_price,
        g.state,
        g.goods_unit,
        g.goods_type_id,
        t.goods_type_name,
        s.goods_num
        from t_goods as g
        left join t_goods_type as t
        on g.goods_type_id = t.goods_type_id
        left join t_sale_list_goods as s
        on g.goods_type_id = s.goods_type_id
        <where>
            <if test="codeOrName != null and codeOrName != ''">
                or g.goods_code like CONCAT('%', #{codeOrName} ,'%')
            </if>
            <if test="codeOrName != null and codeOrName != ''">
                or g.goods_name like CONCAT('%', #{codeOrName} ,'%')
            </if>
            <if test="goodsTypeId != null and goodsTypeId != ''">
                or g.goods_type_id = #{goodsTypeId}
            </if>
        </where>
        LIMIT #{offSet}, #{rows}
    </select>

    <select id="getGoods" resultMap="BaseResultMap">
        select *
        from t_goods
        where goods_id = #{goodsId}
    </select>


</mapper>
